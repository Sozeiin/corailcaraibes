#!/bin/bash

# Production build script for mobile deployment
echo "üöÄ Building Corail Caraibes Fleet Manager for production..."

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: package.json not found. Please run this script from the project root."
    exit 1
fi

# Clean previous builds
echo "üßπ Cleaning previous builds..."
rm -rf dist
rm -rf android/app/src/main/assets/public
rm -rf ios/App/App/public

# Install dependencies
echo "üì¶ Installing dependencies..."
npm ci

# Run linting
echo "üîç Running linter..."
npm run lint

# Build the web app for production
echo "üèóÔ∏è Building web application..."
NODE_ENV=production npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå Web build failed"
    exit 1
fi

# Sync with Capacitor
echo "üì± Syncing with Capacitor..."
npx cap sync

if [ $? -ne 0 ]; then
    echo "‚ùå Capacitor sync failed"
    exit 1
fi

# Build Android APK
echo "üì± Building Android APK..."
if [ -d "android" ]; then
    cd android
    ./gradlew assembleRelease
    if [ $? -eq 0 ]; then
        echo "‚úÖ Android APK built successfully!"
        echo "üìç Location: android/app/build/outputs/apk/release/app-release.apk"
    else
        echo "‚ùå Android build failed"
    fi
    cd ..
else
    echo "‚ö†Ô∏è Android directory not found. Run 'npx cap add android' first."
fi

# Build Android App Bundle (AAB) - preferred for Play Store
echo "üì± Building Android App Bundle..."
if [ -d "android" ]; then
    cd android
    ./gradlew bundleRelease
    if [ $? -eq 0 ]; then
        echo "‚úÖ Android App Bundle built successfully!"
        echo "üìç Location: android/app/build/outputs/bundle/release/app-release.aab"
    else
        echo "‚ùå Android bundle build failed"
    fi
    cd ..
fi

# iOS build instructions (requires Xcode on macOS)
echo "üì± iOS Build Instructions:"
if [ "$(uname)" = "Darwin" ]; then
    echo "To build for iOS:"
    echo "1. Run: npx cap open ios"
    echo "2. In Xcode, select your team and provisioning profile"
    echo "3. Choose 'Generic iOS Device' or your connected device"
    echo "4. Product > Archive"
    echo "5. Upload to App Store Connect"
else
    echo "‚ö†Ô∏è iOS builds require macOS and Xcode"
    echo "Transfer your project to a Mac to build for iOS"
fi

echo ""
echo "‚úÖ Production build complete!"
echo ""
echo "üìã Next steps for store deployment:"
echo "‚Ä¢ Android: Upload app-release.aab to Google Play Console"
echo "‚Ä¢ iOS: Archive in Xcode and upload to App Store Connect"
echo "‚Ä¢ Test thoroughly on real devices before publishing"
echo ""
echo "üìö Store preparation checklist:"
echo "‚Ä¢ App icons (512x512 for Android, 1024x1024 for iOS)"
echo "‚Ä¢ Screenshots for all device sizes"
echo "‚Ä¢ App description and metadata"
echo "‚Ä¢ Privacy policy URL"
echo "‚Ä¢ Age rating and content categories"